{"messages": [{"role": "system", "content": "As an expert data analyst, your task is to standardize the data from various CSV files, each with different schemas, into a unified standard schema.\n**Task Overview:**\nYou will receive CSV files with differing schemas and are required to convert them to a standard schema. The standard schema prioritizes specific columns crucial for data consistency and analysis. Here are the prioritized columns for the standard schema:\n- `transaction_external_id`: Any unique identifier for the transaction, invoice, or order.- `status`: Status of the transactions (COMMITTED, PENDING, FULLY_REFUNDED).- `transaction_source`: Source of the transactions (IMPORTED as default).- `date`: Date the transaction occurred.- `total_amount`: Total amount of the transaction.- `total_tax_amount`: Total tax amount of the transaction.- `currency`: ISO 3 digit currency code.- `description`: Description of the transaction.- `customer_id`: Any unique ID for a customer.- `customer_name`: Name of the customer.- `customer_email`: Email of the customer.- `marketplace`: If this transaction is from a marketplace facilitator.- `line_item_id`: Line item ID - Unique ID of the transaction item.- `product_external_id`: Unique ID of a product stored in your order management or billing system.- `product_name`: Name of the product.- `product_description`: Description of the product.- `amount`: Amount of the item.- `tax_amount`: Tax amount of the item.- `quantity`: Quantity of the item.- `exempt`: If the item is exempt from tax.\nYou will also encounter other columns in the raw CSV files. Here are the definitions for those additional columns:\n- `ship_to_phone`: Phone number for shipping address.- `ship_to_street_line_1`: Address line 1 for shipping.- `ship_to_street_line_2`: Address line 2 for shipping.- `ship_to_city`: City for shipping address.- `ship_to_state`: State for shipping address.- `ship_to_postal_code`: Postal code for shipping address.- `ship_to_country`: Country for shipping address.- `bill_to_phone`: Phone number for billing address.- `bill_to_street_line_1`: Address line 1 for billing.- `bill_to_street_line_2`: Address line 2 for billing.- `bill_to_city`: City for billing address.- `bill_to_state`: State for billing address.- `bill_to_postal_code`: Postal code for billing address.- `bill_to_country`: Country for billing address.\n\n           **Tasks:**\n1. Your primary objective is to map as many columns as possible to transfer data directly from the raw CSV files to the standard schema, even if columns match 10-20% map it to transfer.2. Additionally, map dependable columns of the standard schema that can be filled with data from the new CSV file.    for exmaple if there is colummn with the whole address in the new csv, we can fill it's data in chunks in the standard schema's columns3. Map any remaining columns with static values.    for example currency will be 'USD' mostly, there will be many columns like that4. Map columns with even tiny possibility of match \nNow you will be provided with a csv file, and your response will be a json object for column mapping"}, {"role": "user", "content": "  transaction_external_id     status transaction_source                 date  ...   amount  tax_amount quantity  exempt\n0                  id_302  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n1                  id_303  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n2                  id_304  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n3                  id_305  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n4                  id_306  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n\n[5 rows x 34 columns]"}, {"role": "assistant", "content": "\"\\t\\t\\n{\\\"transaction_external_id\\\":\\\"transaction_external_id\\\",\\n\\\"status\\\":\\\"status\\\"\\t,\\n\\\"transaction_source\\\":\\\"transaction_source\\\",    \\n\\\"date\\\":\\\"date\\\",\\n\\\"total_amount\\\":\\\"total_amount\\\" ,\\n\\\"total_tax_amount\\\":\\\"total_tax_amount\\\", \\n\\\"currency\\\":\\\"currency\\\",  \\n\\\"description\\\":\\\"description\\\",\\n\\\"customer_id\\\":\\\"customer_id\\\", \\n\\\"customer_name\\\":\\\"customer_name\\\", \\n\\\"customer_email\\\":\\\"customer_email\\\", \\n\\\"marketplace\\\":\\\"marketplace\\\", \\n\\\"ship_to_phone\\\":\\\"ship_to_phone\\\",\\n\\\"ship_to_street_line_1\\\":\\\"ship_to_street_line_1\\\", \\n\\\"ship_to_street_line_2\\\":\\\"ship_to_street_line_2\\\",\\n\\\"ship_to_city\\\":\\\"ship_to_city\\\", \\n\\\"ship_to_state\\\":\\\"ship_to_state\\\",\\n\\\"ship_to_postal_code\\\":\\\"ship_to_postal_code\\\",\\n\\\"ship_to_country\\\":\\\"ship_to_country\\\", \\n\\\"bill_to_phone\\\":\\\"bill_to_phone\\\",\\n\\\"bill_to_street_line_1\\\":\\\"bill_to_street_line_1\\\",\\n\\\"bill_to_street_line_2\\\":\\\"bill_to_street_line_2\\\",\\n\\\"bill_to_city\\\":\\\"bill_to_city\\\",\\n\\\"bill_to_state\\\":\\\"bill_to_state\\\",\\n\\\"bill_to_postal_code\\\":\\\"bill_to_postal_code\\\",\\n\\\"bill_to_country\\\":\\\"bill_to_country\\\",\\n\\\"line_item_id\\\":\\\"line_item_id\\\",\\n\\\"product_external_id\\\":\\\"product_external_id\\\",\\n\\\"product_name\\\":\\\"product_name\\\",\\n\\\"product_description\\\":\\\"product_description\\\",\\n\\\"amount\\\":\\\"amount\\\",\\n\\\"tax_amount\\\":\\\"tax_amount\\\",\\n\\\"quantity\\\":\\\"quantity\\\", \\n\\\"exempt\\\":\\\"exempt\\\"\\n}\\n\\n\\n\\n\\n\""}]}
{"messages": [{"role": "system", "content": "As an expert data analyst, your task is to standardize the data from various CSV files, each with different schemas, into a unified standard schema.\n**Task Overview:**\nYou will receive CSV files with differing schemas and are required to convert them to a standard schema. The standard schema prioritizes specific columns crucial for data consistency and analysis. Here are the prioritized columns for the standard schema:\n- `transaction_external_id`: Any unique identifier for the transaction, invoice, or order.- `status`: Status of the transactions (COMMITTED, PENDING, FULLY_REFUNDED).- `transaction_source`: Source of the transactions (IMPORTED as default).- `date`: Date the transaction occurred.- `total_amount`: Total amount of the transaction.- `total_tax_amount`: Total tax amount of the transaction.- `currency`: ISO 3 digit currency code.- `description`: Description of the transaction.- `customer_id`: Any unique ID for a customer.- `customer_name`: Name of the customer.- `customer_email`: Email of the customer.- `marketplace`: If this transaction is from a marketplace facilitator.- `line_item_id`: Line item ID - Unique ID of the transaction item.- `product_external_id`: Unique ID of a product stored in your order management or billing system.- `product_name`: Name of the product.- `product_description`: Description of the product.- `amount`: Amount of the item.- `tax_amount`: Tax amount of the item.- `quantity`: Quantity of the item.- `exempt`: If the item is exempt from tax.\nYou will also encounter other columns in the raw CSV files. Here are the definitions for those additional columns:\n- `ship_to_phone`: Phone number for shipping address.- `ship_to_street_line_1`: Address line 1 for shipping.- `ship_to_street_line_2`: Address line 2 for shipping.- `ship_to_city`: City for shipping address.- `ship_to_state`: State for shipping address.- `ship_to_postal_code`: Postal code for shipping address.- `ship_to_country`: Country for shipping address.- `bill_to_phone`: Phone number for billing address.- `bill_to_street_line_1`: Address line 1 for billing.- `bill_to_street_line_2`: Address line 2 for billing.- `bill_to_city`: City for billing address.- `bill_to_state`: State for billing address.- `bill_to_postal_code`: Postal code for billing address.- `bill_to_country`: Country for billing address.\n\n           **Tasks:**\n1. Your primary objective is to map as many columns as possible to transfer data directly from the raw CSV files to the standard schema, even if columns match 10-20% map it to transfer.2. Additionally, map dependable columns of the standard schema that can be filled with data from the new CSV file.    for exmaple if there is colummn with the whole address in the new csv, we can fill it's data in chunks in the standard schema's columns3. Map any remaining columns with static values.    for example currency will be 'USD' mostly, there will be many columns like that4. Map columns with even tiny possibility of match \nNow you will be provided with a csv file, and your response will be a json object for column mapping"}, {"role": "user", "content": "  transaction_external_id     status transaction_source                 date  ...   amount  tax_amount quantity  exempt\n0                  id_302  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n1                  id_303  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n2                  id_304  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n3                  id_305  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n4                  id_306  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n\n[5 rows x 34 columns]"}, {"role": "assistant", "content": "\"\\t\\t\\n{\\\"transaction_external_id\\\":\\\"transaction_external_id\\\",\\n\\\"status\\\":\\\"status\\\"\\t,\\n\\\"transaction_source\\\":\\\"transaction_source\\\",    \\n\\\"date\\\":\\\"date\\\",\\n\\\"total_amount\\\":\\\"total_amount\\\" ,\\n\\\"total_tax_amount\\\":\\\"total_tax_amount\\\", \\n\\\"currency\\\":\\\"currency\\\",  \\n\\\"description\\\":\\\"description\\\",\\n\\\"customer_id\\\":\\\"customer_id\\\", \\n\\\"customer_name\\\":\\\"customer_name\\\", \\n\\\"customer_email\\\":\\\"customer_email\\\", \\n\\\"marketplace\\\":\\\"marketplace\\\", \\n\\\"ship_to_phone\\\":\\\"ship_to_phone\\\",\\n\\\"ship_to_street_line_1\\\":\\\"ship_to_street_line_1\\\", \\n\\\"ship_to_street_line_2\\\":\\\"ship_to_street_line_2\\\",\\n\\\"ship_to_city\\\":\\\"ship_to_city\\\", \\n\\\"ship_to_state\\\":\\\"ship_to_state\\\",\\n\\\"ship_to_postal_code\\\":\\\"ship_to_postal_code\\\",\\n\\\"ship_to_country\\\":\\\"ship_to_country\\\", \\n\\\"bill_to_phone\\\":\\\"bill_to_phone\\\",\\n\\\"bill_to_street_line_1\\\":\\\"bill_to_street_line_1\\\",\\n\\\"bill_to_street_line_2\\\":\\\"bill_to_street_line_2\\\",\\n\\\"bill_to_city\\\":\\\"bill_to_city\\\",\\n\\\"bill_to_state\\\":\\\"bill_to_state\\\",\\n\\\"bill_to_postal_code\\\":\\\"bill_to_postal_code\\\",\\n\\\"bill_to_country\\\":\\\"bill_to_country\\\",\\n\\\"line_item_id\\\":\\\"line_item_id\\\",\\n\\\"product_external_id\\\":\\\"product_external_id\\\",\\n\\\"product_name\\\":\\\"product_name\\\",\\n\\\"product_description\\\":\\\"product_description\\\",\\n\\\"amount\\\":\\\"amount\\\",\\n\\\"tax_amount\\\":\\\"tax_amount\\\",\\n\\\"quantity\\\":\\\"quantity\\\", \\n\\\"exempt\\\":\\\"exempt\\\"\\n}\\n\\n\\n\\n\\n\""}]}
{"messages": [{"role": "system", "content": "As an expert data analyst, your task is to standardize the data from various CSV files, each with different schemas, into a unified standard schema.\n**Task Overview:**\nYou will receive CSV files with differing schemas and are required to convert them to a standard schema. The standard schema prioritizes specific columns crucial for data consistency and analysis. Here are the prioritized columns for the standard schema:\n- `transaction_external_id`: Any unique identifier for the transaction, invoice, or order.- `status`: Status of the transactions (COMMITTED, PENDING, FULLY_REFUNDED).- `transaction_source`: Source of the transactions (IMPORTED as default).- `date`: Date the transaction occurred.- `total_amount`: Total amount of the transaction.- `total_tax_amount`: Total tax amount of the transaction.- `currency`: ISO 3 digit currency code.- `description`: Description of the transaction.- `customer_id`: Any unique ID for a customer.- `customer_name`: Name of the customer.- `customer_email`: Email of the customer.- `marketplace`: If this transaction is from a marketplace facilitator.- `line_item_id`: Line item ID - Unique ID of the transaction item.- `product_external_id`: Unique ID of a product stored in your order management or billing system.- `product_name`: Name of the product.- `product_description`: Description of the product.- `amount`: Amount of the item.- `tax_amount`: Tax amount of the item.- `quantity`: Quantity of the item.- `exempt`: If the item is exempt from tax.\nYou will also encounter other columns in the raw CSV files. Here are the definitions for those additional columns:\n- `ship_to_phone`: Phone number for shipping address.- `ship_to_street_line_1`: Address line 1 for shipping.- `ship_to_street_line_2`: Address line 2 for shipping.- `ship_to_city`: City for shipping address.- `ship_to_state`: State for shipping address.- `ship_to_postal_code`: Postal code for shipping address.- `ship_to_country`: Country for shipping address.- `bill_to_phone`: Phone number for billing address.- `bill_to_street_line_1`: Address line 1 for billing.- `bill_to_street_line_2`: Address line 2 for billing.- `bill_to_city`: City for billing address.- `bill_to_state`: State for billing address.- `bill_to_postal_code`: Postal code for billing address.- `bill_to_country`: Country for billing address.\n\n           **Tasks:**\n1. Your primary objective is to map as many columns as possible to transfer data directly from the raw CSV files to the standard schema, even if columns match 10-20% map it to transfer.2. Additionally, map dependable columns of the standard schema that can be filled with data from the new CSV file.    for exmaple if there is colummn with the whole address in the new csv, we can fill it's data in chunks in the standard schema's columns3. Map any remaining columns with static values.    for example currency will be 'USD' mostly, there will be many columns like that4. Map columns with even tiny possibility of match \nNow you will be provided with a csv file, and your response will be a json object for column mapping"}, {"role": "user", "content": "  transaction_external_id     status transaction_source                 date  ...   amount  tax_amount quantity  exempt\n0                  id_302  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n1                  id_303  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n2                  id_304  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n3                  id_305  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n4                  id_306  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n\n[5 rows x 34 columns]"}, {"role": "assistant", "content": "\"\\t\\t\\n{\\\"transaction_external_id\\\":\\\"transaction_external_id\\\",\\n\\\"status\\\":\\\"status\\\"\\t,\\n\\\"transaction_source\\\":\\\"transaction_source\\\",    \\n\\\"date\\\":\\\"date\\\",\\n\\\"total_amount\\\":\\\"total_amount\\\" ,\\n\\\"total_tax_amount\\\":\\\"total_tax_amount\\\", \\n\\\"currency\\\":\\\"currency\\\",  \\n\\\"description\\\":\\\"description\\\",\\n\\\"customer_id\\\":\\\"customer_id\\\", \\n\\\"customer_name\\\":\\\"customer_name\\\", \\n\\\"customer_email\\\":\\\"customer_email\\\", \\n\\\"marketplace\\\":\\\"marketplace\\\", \\n\\\"ship_to_phone\\\":\\\"ship_to_phone\\\",\\n\\\"ship_to_street_line_1\\\":\\\"ship_to_street_line_1\\\", \\n\\\"ship_to_street_line_2\\\":\\\"ship_to_street_line_2\\\",\\n\\\"ship_to_city\\\":\\\"ship_to_city\\\", \\n\\\"ship_to_state\\\":\\\"ship_to_state\\\",\\n\\\"ship_to_postal_code\\\":\\\"ship_to_postal_code\\\",\\n\\\"ship_to_country\\\":\\\"ship_to_country\\\", \\n\\\"bill_to_phone\\\":\\\"bill_to_phone\\\",\\n\\\"bill_to_street_line_1\\\":\\\"bill_to_street_line_1\\\",\\n\\\"bill_to_street_line_2\\\":\\\"bill_to_street_line_2\\\",\\n\\\"bill_to_city\\\":\\\"bill_to_city\\\",\\n\\\"bill_to_state\\\":\\\"bill_to_state\\\",\\n\\\"bill_to_postal_code\\\":\\\"bill_to_postal_code\\\",\\n\\\"bill_to_country\\\":\\\"bill_to_country\\\",\\n\\\"line_item_id\\\":\\\"line_item_id\\\",\\n\\\"product_external_id\\\":\\\"product_external_id\\\",\\n\\\"product_name\\\":\\\"product_name\\\",\\n\\\"product_description\\\":\\\"product_description\\\",\\n\\\"amount\\\":\\\"amount\\\",\\n\\\"tax_amount\\\":\\\"tax_amount\\\",\\n\\\"quantity\\\":\\\"quantity\\\", \\n\\\"exempt\\\":\\\"exempt\\\"\\n}\\n\\n\\n\\n\\n\""}]}
{"messages": [{"role": "system", "content": "As an expert data analyst, your task is to standardize the data from various CSV files, each with different schemas, into a unified standard schema.\n**Task Overview:**\nYou will receive CSV files with differing schemas and are required to convert them to a standard schema. The standard schema prioritizes specific columns crucial for data consistency and analysis. Here are the prioritized columns for the standard schema:\n- `transaction_external_id`: Any unique identifier for the transaction, invoice, or order.- `status`: Status of the transactions (COMMITTED, PENDING, FULLY_REFUNDED).- `transaction_source`: Source of the transactions (IMPORTED as default).- `date`: Date the transaction occurred.- `total_amount`: Total amount of the transaction.- `total_tax_amount`: Total tax amount of the transaction.- `currency`: ISO 3 digit currency code.- `description`: Description of the transaction.- `customer_id`: Any unique ID for a customer.- `customer_name`: Name of the customer.- `customer_email`: Email of the customer.- `marketplace`: If this transaction is from a marketplace facilitator.- `line_item_id`: Line item ID - Unique ID of the transaction item.- `product_external_id`: Unique ID of a product stored in your order management or billing system.- `product_name`: Name of the product.- `product_description`: Description of the product.- `amount`: Amount of the item.- `tax_amount`: Tax amount of the item.- `quantity`: Quantity of the item.- `exempt`: If the item is exempt from tax.\nYou will also encounter other columns in the raw CSV files. Here are the definitions for those additional columns:\n- `ship_to_phone`: Phone number for shipping address.- `ship_to_street_line_1`: Address line 1 for shipping.- `ship_to_street_line_2`: Address line 2 for shipping.- `ship_to_city`: City for shipping address.- `ship_to_state`: State for shipping address.- `ship_to_postal_code`: Postal code for shipping address.- `ship_to_country`: Country for shipping address.- `bill_to_phone`: Phone number for billing address.- `bill_to_street_line_1`: Address line 1 for billing.- `bill_to_street_line_2`: Address line 2 for billing.- `bill_to_city`: City for billing address.- `bill_to_state`: State for billing address.- `bill_to_postal_code`: Postal code for billing address.- `bill_to_country`: Country for billing address.\n\n           **Tasks:**\n1. Your primary objective is to map as many columns as possible to transfer data directly from the raw CSV files to the standard schema, even if columns match 10-20% map it to transfer.2. Additionally, map dependable columns of the standard schema that can be filled with data from the new CSV file.    for exmaple if there is colummn with the whole address in the new csv, we can fill it's data in chunks in the standard schema's columns3. Map any remaining columns with static values.    for example currency will be 'USD' mostly, there will be many columns like that4. Map columns with even tiny possibility of match \nNow you will be provided with a csv file, and your response will be a json object for column mapping"}, {"role": "user", "content": "  transaction_external_id     status transaction_source                 date  ...   amount  tax_amount quantity  exempt\n0                  id_302  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n1                  id_303  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n2                  id_304  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n3                  id_305  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n4                  id_306  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n\n[5 rows x 34 columns]"}, {"role": "assistant", "content": "\"\\t\\t\\n{\\\"transaction_external_id\\\":\\\"transaction_external_id\\\",\\n\\\"status\\\":\\\"status\\\"\\t,\\n\\\"transaction_source\\\":\\\"transaction_source\\\",    \\n\\\"date\\\":\\\"date\\\",\\n\\\"total_amount\\\":\\\"total_amount\\\" ,\\n\\\"total_tax_amount\\\":\\\"total_tax_amount\\\", \\n\\\"currency\\\":\\\"currency\\\",  \\n\\\"description\\\":\\\"description\\\",\\n\\\"customer_id\\\":\\\"customer_id\\\", \\n\\\"customer_name\\\":\\\"customer_name\\\", \\n\\\"customer_email\\\":\\\"customer_email\\\", \\n\\\"marketplace\\\":\\\"marketplace\\\", \\n\\\"ship_to_phone\\\":\\\"ship_to_phone\\\",\\n\\\"ship_to_street_line_1\\\":\\\"ship_to_street_line_1\\\", \\n\\\"ship_to_street_line_2\\\":\\\"ship_to_street_line_2\\\",\\n\\\"ship_to_city\\\":\\\"ship_to_city\\\", \\n\\\"ship_to_state\\\":\\\"ship_to_state\\\",\\n\\\"ship_to_postal_code\\\":\\\"ship_to_postal_code\\\",\\n\\\"ship_to_country\\\":\\\"ship_to_country\\\", \\n\\\"bill_to_phone\\\":\\\"bill_to_phone\\\",\\n\\\"bill_to_street_line_1\\\":\\\"bill_to_street_line_1\\\",\\n\\\"bill_to_street_line_2\\\":\\\"bill_to_street_line_2\\\",\\n\\\"bill_to_city\\\":\\\"bill_to_city\\\",\\n\\\"bill_to_state\\\":\\\"bill_to_state\\\",\\n\\\"bill_to_postal_code\\\":\\\"bill_to_postal_code\\\",\\n\\\"bill_to_country\\\":\\\"bill_to_country\\\",\\n\\\"line_item_id\\\":\\\"line_item_id\\\",\\n\\\"product_external_id\\\":\\\"product_external_id\\\",\\n\\\"product_name\\\":\\\"product_name\\\",\\n\\\"product_description\\\":\\\"product_description\\\",\\n\\\"amount\\\":\\\"amount\\\",\\n\\\"tax_amount\\\":\\\"tax_amount\\\",\\n\\\"quantity\\\":\\\"quantity\\\", \\n\\\"exempt\\\":\\\"exempt\\\"\\n}\\n\\n\\n\\n\\n\""}]}
{"messages": [{"role": "system", "content": "As an expert data analyst, your task is to standardize the data from various CSV files, each with different schemas, into a unified standard schema.\n**Task Overview:**\nYou will receive CSV files with differing schemas and are required to convert them to a standard schema. The standard schema prioritizes specific columns crucial for data consistency and analysis. Here are the prioritized columns for the standard schema:\n- `transaction_external_id`: Any unique identifier for the transaction, invoice, or order.- `status`: Status of the transactions (COMMITTED, PENDING, FULLY_REFUNDED).- `transaction_source`: Source of the transactions (IMPORTED as default).- `date`: Date the transaction occurred.- `total_amount`: Total amount of the transaction.- `total_tax_amount`: Total tax amount of the transaction.- `currency`: ISO 3 digit currency code.- `description`: Description of the transaction.- `customer_id`: Any unique ID for a customer.- `customer_name`: Name of the customer.- `customer_email`: Email of the customer.- `marketplace`: If this transaction is from a marketplace facilitator.- `line_item_id`: Line item ID - Unique ID of the transaction item.- `product_external_id`: Unique ID of a product stored in your order management or billing system.- `product_name`: Name of the product.- `product_description`: Description of the product.- `amount`: Amount of the item.- `tax_amount`: Tax amount of the item.- `quantity`: Quantity of the item.- `exempt`: If the item is exempt from tax.\nYou will also encounter other columns in the raw CSV files. Here are the definitions for those additional columns:\n- `ship_to_phone`: Phone number for shipping address.- `ship_to_street_line_1`: Address line 1 for shipping.- `ship_to_street_line_2`: Address line 2 for shipping.- `ship_to_city`: City for shipping address.- `ship_to_state`: State for shipping address.- `ship_to_postal_code`: Postal code for shipping address.- `ship_to_country`: Country for shipping address.- `bill_to_phone`: Phone number for billing address.- `bill_to_street_line_1`: Address line 1 for billing.- `bill_to_street_line_2`: Address line 2 for billing.- `bill_to_city`: City for billing address.- `bill_to_state`: State for billing address.- `bill_to_postal_code`: Postal code for billing address.- `bill_to_country`: Country for billing address.\n\n           **Tasks:**\n1. Your primary objective is to map as many columns as possible to transfer data directly from the raw CSV files to the standard schema, even if columns match 10-20% map it to transfer.2. Additionally, map dependable columns of the standard schema that can be filled with data from the new CSV file.    for exmaple if there is colummn with the whole address in the new csv, we can fill it's data in chunks in the standard schema's columns3. Map any remaining columns with static values.    for example currency will be 'USD' mostly, there will be many columns like that4. Map columns with even tiny possibility of match \nNow you will be provided with a csv file, and your response will be a json object for column mapping"}, {"role": "user", "content": "  transaction_external_id     status transaction_source                 date  ...   amount  tax_amount quantity  exempt\n0                  id_302  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n1                  id_303  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n2                  id_304  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n3                  id_305  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n4                  id_306  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n\n[5 rows x 34 columns]"}, {"role": "assistant", "content": "\"\\t\\t\\n{\\\"transaction_external_id\\\":\\\"transaction_external_id\\\",\\n\\\"status\\\":\\\"status\\\"\\t,\\n\\\"transaction_source\\\":\\\"transaction_source\\\",    \\n\\\"date\\\":\\\"date\\\",\\n\\\"total_amount\\\":\\\"total_amount\\\" ,\\n\\\"total_tax_amount\\\":\\\"total_tax_amount\\\", \\n\\\"currency\\\":\\\"currency\\\",  \\n\\\"description\\\":\\\"description\\\",\\n\\\"customer_id\\\":\\\"customer_id\\\", \\n\\\"customer_name\\\":\\\"customer_name\\\", \\n\\\"customer_email\\\":\\\"customer_email\\\", \\n\\\"marketplace\\\":\\\"marketplace\\\", \\n\\\"ship_to_phone\\\":\\\"ship_to_phone\\\",\\n\\\"ship_to_street_line_1\\\":\\\"ship_to_street_line_1\\\", \\n\\\"ship_to_street_line_2\\\":\\\"ship_to_street_line_2\\\",\\n\\\"ship_to_city\\\":\\\"ship_to_city\\\", \\n\\\"ship_to_state\\\":\\\"ship_to_state\\\",\\n\\\"ship_to_postal_code\\\":\\\"ship_to_postal_code\\\",\\n\\\"ship_to_country\\\":\\\"ship_to_country\\\", \\n\\\"bill_to_phone\\\":\\\"bill_to_phone\\\",\\n\\\"bill_to_street_line_1\\\":\\\"bill_to_street_line_1\\\",\\n\\\"bill_to_street_line_2\\\":\\\"bill_to_street_line_2\\\",\\n\\\"bill_to_city\\\":\\\"bill_to_city\\\",\\n\\\"bill_to_state\\\":\\\"bill_to_state\\\",\\n\\\"bill_to_postal_code\\\":\\\"bill_to_postal_code\\\",\\n\\\"bill_to_country\\\":\\\"bill_to_country\\\",\\n\\\"line_item_id\\\":\\\"line_item_id\\\",\\n\\\"product_external_id\\\":\\\"product_external_id\\\",\\n\\\"product_name\\\":\\\"product_name\\\",\\n\\\"product_description\\\":\\\"product_description\\\",\\n\\\"amount\\\":\\\"amount\\\",\\n\\\"tax_amount\\\":\\\"tax_amount\\\",\\n\\\"quantity\\\":\\\"quantity\\\", \\n\\\"exempt\\\":\\\"exempt\\\"\\n}\\n\\n\\n\\n\\n\""}]}
{"messages": [{"role": "system", "content": "As an expert data analyst, your task is to standardize the data from various CSV files, each with different schemas, into a unified standard schema.\n**Task Overview:**\nYou will receive CSV files with differing schemas and are required to convert them to a standard schema. The standard schema prioritizes specific columns crucial for data consistency and analysis. Here are the prioritized columns for the standard schema:\n- `transaction_external_id`: Any unique identifier for the transaction, invoice, or order.- `status`: Status of the transactions (COMMITTED, PENDING, FULLY_REFUNDED).- `transaction_source`: Source of the transactions (IMPORTED as default).- `date`: Date the transaction occurred.- `total_amount`: Total amount of the transaction.- `total_tax_amount`: Total tax amount of the transaction.- `currency`: ISO 3 digit currency code.- `description`: Description of the transaction.- `customer_id`: Any unique ID for a customer.- `customer_name`: Name of the customer.- `customer_email`: Email of the customer.- `marketplace`: If this transaction is from a marketplace facilitator.- `line_item_id`: Line item ID - Unique ID of the transaction item.- `product_external_id`: Unique ID of a product stored in your order management or billing system.- `product_name`: Name of the product.- `product_description`: Description of the product.- `amount`: Amount of the item.- `tax_amount`: Tax amount of the item.- `quantity`: Quantity of the item.- `exempt`: If the item is exempt from tax.\nYou will also encounter other columns in the raw CSV files. Here are the definitions for those additional columns:\n- `ship_to_phone`: Phone number for shipping address.- `ship_to_street_line_1`: Address line 1 for shipping.- `ship_to_street_line_2`: Address line 2 for shipping.- `ship_to_city`: City for shipping address.- `ship_to_state`: State for shipping address.- `ship_to_postal_code`: Postal code for shipping address.- `ship_to_country`: Country for shipping address.- `bill_to_phone`: Phone number for billing address.- `bill_to_street_line_1`: Address line 1 for billing.- `bill_to_street_line_2`: Address line 2 for billing.- `bill_to_city`: City for billing address.- `bill_to_state`: State for billing address.- `bill_to_postal_code`: Postal code for billing address.- `bill_to_country`: Country for billing address.\n\n           **Tasks:**\n1. Your primary objective is to map as many columns as possible to transfer data directly from the raw CSV files to the standard schema, even if columns match 10-20% map it to transfer.2. Additionally, map dependable columns of the standard schema that can be filled with data from the new CSV file.    for exmaple if there is colummn with the whole address in the new csv, we can fill it's data in chunks in the standard schema's columns3. Map any remaining columns with static values.    for example currency will be 'USD' mostly, there will be many columns like that4. Map columns with even tiny possibility of match \nNow you will be provided with a csv file, and your response will be a json object for column mapping"}, {"role": "user", "content": "  transaction_external_id     status transaction_source                 date  ...   amount  tax_amount quantity  exempt\n0                  id_302  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n1                  id_303  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n2                  id_304  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n3                  id_305  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n4                  id_306  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n\n[5 rows x 34 columns]"}, {"role": "assistant", "content": "\"\\t\\t\\n{\\\"transaction_external_id\\\":\\\"transaction_external_id\\\",\\n\\\"status\\\":\\\"status\\\"\\t,\\n\\\"transaction_source\\\":\\\"transaction_source\\\",    \\n\\\"date\\\":\\\"date\\\",\\n\\\"total_amount\\\":\\\"total_amount\\\" ,\\n\\\"total_tax_amount\\\":\\\"total_tax_amount\\\", \\n\\\"currency\\\":\\\"currency\\\",  \\n\\\"description\\\":\\\"description\\\",\\n\\\"customer_id\\\":\\\"customer_id\\\", \\n\\\"customer_name\\\":\\\"customer_name\\\", \\n\\\"customer_email\\\":\\\"customer_email\\\", \\n\\\"marketplace\\\":\\\"marketplace\\\", \\n\\\"ship_to_phone\\\":\\\"ship_to_phone\\\",\\n\\\"ship_to_street_line_1\\\":\\\"ship_to_street_line_1\\\", \\n\\\"ship_to_street_line_2\\\":\\\"ship_to_street_line_2\\\",\\n\\\"ship_to_city\\\":\\\"ship_to_city\\\", \\n\\\"ship_to_state\\\":\\\"ship_to_state\\\",\\n\\\"ship_to_postal_code\\\":\\\"ship_to_postal_code\\\",\\n\\\"ship_to_country\\\":\\\"ship_to_country\\\", \\n\\\"bill_to_phone\\\":\\\"bill_to_phone\\\",\\n\\\"bill_to_street_line_1\\\":\\\"bill_to_street_line_1\\\",\\n\\\"bill_to_street_line_2\\\":\\\"bill_to_street_line_2\\\",\\n\\\"bill_to_city\\\":\\\"bill_to_city\\\",\\n\\\"bill_to_state\\\":\\\"bill_to_state\\\",\\n\\\"bill_to_postal_code\\\":\\\"bill_to_postal_code\\\",\\n\\\"bill_to_country\\\":\\\"bill_to_country\\\",\\n\\\"line_item_id\\\":\\\"line_item_id\\\",\\n\\\"product_external_id\\\":\\\"product_external_id\\\",\\n\\\"product_name\\\":\\\"product_name\\\",\\n\\\"product_description\\\":\\\"product_description\\\",\\n\\\"amount\\\":\\\"amount\\\",\\n\\\"tax_amount\\\":\\\"tax_amount\\\",\\n\\\"quantity\\\":\\\"quantity\\\", \\n\\\"exempt\\\":\\\"exempt\\\"\\n}\\n\\n\\n\\n\\n\""}]}
{"messages": [{"role": "system", "content": "As an expert data analyst, your task is to standardize the data from various CSV files, each with different schemas, into a unified standard schema.\n**Task Overview:**\nYou will receive CSV files with differing schemas and are required to convert them to a standard schema. The standard schema prioritizes specific columns crucial for data consistency and analysis. Here are the prioritized columns for the standard schema:\n- `transaction_external_id`: Any unique identifier for the transaction, invoice, or order.- `status`: Status of the transactions (COMMITTED, PENDING, FULLY_REFUNDED).- `transaction_source`: Source of the transactions (IMPORTED as default).- `date`: Date the transaction occurred.- `total_amount`: Total amount of the transaction.- `total_tax_amount`: Total tax amount of the transaction.- `currency`: ISO 3 digit currency code.- `description`: Description of the transaction.- `customer_id`: Any unique ID for a customer.- `customer_name`: Name of the customer.- `customer_email`: Email of the customer.- `marketplace`: If this transaction is from a marketplace facilitator.- `line_item_id`: Line item ID - Unique ID of the transaction item.- `product_external_id`: Unique ID of a product stored in your order management or billing system.- `product_name`: Name of the product.- `product_description`: Description of the product.- `amount`: Amount of the item.- `tax_amount`: Tax amount of the item.- `quantity`: Quantity of the item.- `exempt`: If the item is exempt from tax.\nYou will also encounter other columns in the raw CSV files. Here are the definitions for those additional columns:\n- `ship_to_phone`: Phone number for shipping address.- `ship_to_street_line_1`: Address line 1 for shipping.- `ship_to_street_line_2`: Address line 2 for shipping.- `ship_to_city`: City for shipping address.- `ship_to_state`: State for shipping address.- `ship_to_postal_code`: Postal code for shipping address.- `ship_to_country`: Country for shipping address.- `bill_to_phone`: Phone number for billing address.- `bill_to_street_line_1`: Address line 1 for billing.- `bill_to_street_line_2`: Address line 2 for billing.- `bill_to_city`: City for billing address.- `bill_to_state`: State for billing address.- `bill_to_postal_code`: Postal code for billing address.- `bill_to_country`: Country for billing address.\n\n           **Tasks:**\n1. Your primary objective is to map as many columns as possible to transfer data directly from the raw CSV files to the standard schema, even if columns match 10-20% map it to transfer.2. Additionally, map dependable columns of the standard schema that can be filled with data from the new CSV file.    for exmaple if there is colummn with the whole address in the new csv, we can fill it's data in chunks in the standard schema's columns3. Map any remaining columns with static values.    for example currency will be 'USD' mostly, there will be many columns like that4. Map columns with even tiny possibility of match \nNow you will be provided with a csv file, and your response will be a json object for column mapping"}, {"role": "user", "content": "  transaction_external_id     status transaction_source                 date  ...   amount  tax_amount quantity  exempt\n0                  id_302  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n1                  id_303  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n2                  id_304  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n3                  id_305  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n4                  id_306  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n\n[5 rows x 34 columns]"}, {"role": "assistant", "content": "\"\\t\\t\\n{\\\"transaction_external_id\\\":\\\"transaction_external_id\\\",\\n\\\"status\\\":\\\"status\\\"\\t,\\n\\\"transaction_source\\\":\\\"transaction_source\\\",    \\n\\\"date\\\":\\\"date\\\",\\n\\\"total_amount\\\":\\\"total_amount\\\" ,\\n\\\"total_tax_amount\\\":\\\"total_tax_amount\\\", \\n\\\"currency\\\":\\\"currency\\\",  \\n\\\"description\\\":\\\"description\\\",\\n\\\"customer_id\\\":\\\"customer_id\\\", \\n\\\"customer_name\\\":\\\"customer_name\\\", \\n\\\"customer_email\\\":\\\"customer_email\\\", \\n\\\"marketplace\\\":\\\"marketplace\\\", \\n\\\"ship_to_phone\\\":\\\"ship_to_phone\\\",\\n\\\"ship_to_street_line_1\\\":\\\"ship_to_street_line_1\\\", \\n\\\"ship_to_street_line_2\\\":\\\"ship_to_street_line_2\\\",\\n\\\"ship_to_city\\\":\\\"ship_to_city\\\", \\n\\\"ship_to_state\\\":\\\"ship_to_state\\\",\\n\\\"ship_to_postal_code\\\":\\\"ship_to_postal_code\\\",\\n\\\"ship_to_country\\\":\\\"ship_to_country\\\", \\n\\\"bill_to_phone\\\":\\\"bill_to_phone\\\",\\n\\\"bill_to_street_line_1\\\":\\\"bill_to_street_line_1\\\",\\n\\\"bill_to_street_line_2\\\":\\\"bill_to_street_line_2\\\",\\n\\\"bill_to_city\\\":\\\"bill_to_city\\\",\\n\\\"bill_to_state\\\":\\\"bill_to_state\\\",\\n\\\"bill_to_postal_code\\\":\\\"bill_to_postal_code\\\",\\n\\\"bill_to_country\\\":\\\"bill_to_country\\\",\\n\\\"line_item_id\\\":\\\"line_item_id\\\",\\n\\\"product_external_id\\\":\\\"product_external_id\\\",\\n\\\"product_name\\\":\\\"product_name\\\",\\n\\\"product_description\\\":\\\"product_description\\\",\\n\\\"amount\\\":\\\"amount\\\",\\n\\\"tax_amount\\\":\\\"tax_amount\\\",\\n\\\"quantity\\\":\\\"quantity\\\", \\n\\\"exempt\\\":\\\"exempt\\\"\\n}\\n\\n\\n\\n\\n\""}]}
{"messages": [{"role": "system", "content": "As an expert data analyst, your task is to standardize the data from various CSV files, each with different schemas, into a unified standard schema.\n**Task Overview:**\nYou will receive CSV files with differing schemas and are required to convert them to a standard schema. The standard schema prioritizes specific columns crucial for data consistency and analysis. Here are the prioritized columns for the standard schema:\n- `transaction_external_id`: Any unique identifier for the transaction, invoice, or order.- `status`: Status of the transactions (COMMITTED, PENDING, FULLY_REFUNDED).- `transaction_source`: Source of the transactions (IMPORTED as default).- `date`: Date the transaction occurred.- `total_amount`: Total amount of the transaction.- `total_tax_amount`: Total tax amount of the transaction.- `currency`: ISO 3 digit currency code.- `description`: Description of the transaction.- `customer_id`: Any unique ID for a customer.- `customer_name`: Name of the customer.- `customer_email`: Email of the customer.- `marketplace`: If this transaction is from a marketplace facilitator.- `line_item_id`: Line item ID - Unique ID of the transaction item.- `product_external_id`: Unique ID of a product stored in your order management or billing system.- `product_name`: Name of the product.- `product_description`: Description of the product.- `amount`: Amount of the item.- `tax_amount`: Tax amount of the item.- `quantity`: Quantity of the item.- `exempt`: If the item is exempt from tax.\nYou will also encounter other columns in the raw CSV files. Here are the definitions for those additional columns:\n- `ship_to_phone`: Phone number for shipping address.- `ship_to_street_line_1`: Address line 1 for shipping.- `ship_to_street_line_2`: Address line 2 for shipping.- `ship_to_city`: City for shipping address.- `ship_to_state`: State for shipping address.- `ship_to_postal_code`: Postal code for shipping address.- `ship_to_country`: Country for shipping address.- `bill_to_phone`: Phone number for billing address.- `bill_to_street_line_1`: Address line 1 for billing.- `bill_to_street_line_2`: Address line 2 for billing.- `bill_to_city`: City for billing address.- `bill_to_state`: State for billing address.- `bill_to_postal_code`: Postal code for billing address.- `bill_to_country`: Country for billing address.\n\n           **Tasks:**\n1. Your primary objective is to map as many columns as possible to transfer data directly from the raw CSV files to the standard schema, even if columns match 10-20% map it to transfer.2. Additionally, map dependable columns of the standard schema that can be filled with data from the new CSV file.    for exmaple if there is colummn with the whole address in the new csv, we can fill it's data in chunks in the standard schema's columns3. Map any remaining columns with static values.    for example currency will be 'USD' mostly, there will be many columns like that4. Map columns with even tiny possibility of match \nNow you will be provided with a csv file, and your response will be a json object for column mapping"}, {"role": "user", "content": "  transaction_external_id     status transaction_source                 date  ...   amount  tax_amount quantity  exempt\n0                  id_302  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n1                  id_303  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n2                  id_304  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n3                  id_305  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n4                  id_306  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n\n[5 rows x 34 columns]"}, {"role": "assistant", "content": "\"\\t\\t\\n{\\\"transaction_external_id\\\":\\\"transaction_external_id\\\",\\n\\\"status\\\":\\\"status\\\"\\t,\\n\\\"transaction_source\\\":\\\"transaction_source\\\",    \\n\\\"date\\\":\\\"date\\\",\\n\\\"total_amount\\\":\\\"total_amount\\\" ,\\n\\\"total_tax_amount\\\":\\\"total_tax_amount\\\", \\n\\\"currency\\\":\\\"currency\\\",  \\n\\\"description\\\":\\\"description\\\",\\n\\\"customer_id\\\":\\\"customer_id\\\", \\n\\\"customer_name\\\":\\\"customer_name\\\", \\n\\\"customer_email\\\":\\\"customer_email\\\", \\n\\\"marketplace\\\":\\\"marketplace\\\", \\n\\\"ship_to_phone\\\":\\\"ship_to_phone\\\",\\n\\\"ship_to_street_line_1\\\":\\\"ship_to_street_line_1\\\", \\n\\\"ship_to_street_line_2\\\":\\\"ship_to_street_line_2\\\",\\n\\\"ship_to_city\\\":\\\"ship_to_city\\\", \\n\\\"ship_to_state\\\":\\\"ship_to_state\\\",\\n\\\"ship_to_postal_code\\\":\\\"ship_to_postal_code\\\",\\n\\\"ship_to_country\\\":\\\"ship_to_country\\\", \\n\\\"bill_to_phone\\\":\\\"bill_to_phone\\\",\\n\\\"bill_to_street_line_1\\\":\\\"bill_to_street_line_1\\\",\\n\\\"bill_to_street_line_2\\\":\\\"bill_to_street_line_2\\\",\\n\\\"bill_to_city\\\":\\\"bill_to_city\\\",\\n\\\"bill_to_state\\\":\\\"bill_to_state\\\",\\n\\\"bill_to_postal_code\\\":\\\"bill_to_postal_code\\\",\\n\\\"bill_to_country\\\":\\\"bill_to_country\\\",\\n\\\"line_item_id\\\":\\\"line_item_id\\\",\\n\\\"product_external_id\\\":\\\"product_external_id\\\",\\n\\\"product_name\\\":\\\"product_name\\\",\\n\\\"product_description\\\":\\\"product_description\\\",\\n\\\"amount\\\":\\\"amount\\\",\\n\\\"tax_amount\\\":\\\"tax_amount\\\",\\n\\\"quantity\\\":\\\"quantity\\\", \\n\\\"exempt\\\":\\\"exempt\\\"\\n}\\n\\n\\n\\n\\n\""}]}
{"messages": [{"role": "system", "content": "As an expert data analyst, your task is to standardize the data from various CSV files, each with different schemas, into a unified standard schema.\n**Task Overview:**\nYou will receive CSV files with differing schemas and are required to convert them to a standard schema. The standard schema prioritizes specific columns crucial for data consistency and analysis. Here are the prioritized columns for the standard schema:\n- `transaction_external_id`: Any unique identifier for the transaction, invoice, or order.- `status`: Status of the transactions (COMMITTED, PENDING, FULLY_REFUNDED).- `transaction_source`: Source of the transactions (IMPORTED as default).- `date`: Date the transaction occurred.- `total_amount`: Total amount of the transaction.- `total_tax_amount`: Total tax amount of the transaction.- `currency`: ISO 3 digit currency code.- `description`: Description of the transaction.- `customer_id`: Any unique ID for a customer.- `customer_name`: Name of the customer.- `customer_email`: Email of the customer.- `marketplace`: If this transaction is from a marketplace facilitator.- `line_item_id`: Line item ID - Unique ID of the transaction item.- `product_external_id`: Unique ID of a product stored in your order management or billing system.- `product_name`: Name of the product.- `product_description`: Description of the product.- `amount`: Amount of the item.- `tax_amount`: Tax amount of the item.- `quantity`: Quantity of the item.- `exempt`: If the item is exempt from tax.\nYou will also encounter other columns in the raw CSV files. Here are the definitions for those additional columns:\n- `ship_to_phone`: Phone number for shipping address.- `ship_to_street_line_1`: Address line 1 for shipping.- `ship_to_street_line_2`: Address line 2 for shipping.- `ship_to_city`: City for shipping address.- `ship_to_state`: State for shipping address.- `ship_to_postal_code`: Postal code for shipping address.- `ship_to_country`: Country for shipping address.- `bill_to_phone`: Phone number for billing address.- `bill_to_street_line_1`: Address line 1 for billing.- `bill_to_street_line_2`: Address line 2 for billing.- `bill_to_city`: City for billing address.- `bill_to_state`: State for billing address.- `bill_to_postal_code`: Postal code for billing address.- `bill_to_country`: Country for billing address.\n\n           **Tasks:**\n1. Your primary objective is to map as many columns as possible to transfer data directly from the raw CSV files to the standard schema, even if columns match 10-20% map it to transfer.2. Additionally, map dependable columns of the standard schema that can be filled with data from the new CSV file.    for exmaple if there is colummn with the whole address in the new csv, we can fill it's data in chunks in the standard schema's columns3. Map any remaining columns with static values.    for example currency will be 'USD' mostly, there will be many columns like that4. Map columns with even tiny possibility of match \nNow you will be provided with a csv file, and your response will be a json object for column mapping"}, {"role": "user", "content": "  transaction_external_id     status transaction_source                 date  ...   amount  tax_amount quantity  exempt\n0                  id_302  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n1                  id_303  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n2                  id_304  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n3                  id_305  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n4                  id_306  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n\n[5 rows x 34 columns]"}, {"role": "assistant", "content": "\"\\t\\t\\n{\\\"transaction_external_id\\\":\\\"transaction_external_id\\\",\\n\\\"status\\\":\\\"status\\\"\\t,\\n\\\"transaction_source\\\":\\\"transaction_source\\\",    \\n\\\"date\\\":\\\"date\\\",\\n\\\"total_amount\\\":\\\"total_amount\\\" ,\\n\\\"total_tax_amount\\\":\\\"total_tax_amount\\\", \\n\\\"currency\\\":\\\"currency\\\",  \\n\\\"description\\\":\\\"description\\\",\\n\\\"customer_id\\\":\\\"customer_id\\\", \\n\\\"customer_name\\\":\\\"customer_name\\\", \\n\\\"customer_email\\\":\\\"customer_email\\\", \\n\\\"marketplace\\\":\\\"marketplace\\\", \\n\\\"ship_to_phone\\\":\\\"ship_to_phone\\\",\\n\\\"ship_to_street_line_1\\\":\\\"ship_to_street_line_1\\\", \\n\\\"ship_to_street_line_2\\\":\\\"ship_to_street_line_2\\\",\\n\\\"ship_to_city\\\":\\\"ship_to_city\\\", \\n\\\"ship_to_state\\\":\\\"ship_to_state\\\",\\n\\\"ship_to_postal_code\\\":\\\"ship_to_postal_code\\\",\\n\\\"ship_to_country\\\":\\\"ship_to_country\\\", \\n\\\"bill_to_phone\\\":\\\"bill_to_phone\\\",\\n\\\"bill_to_street_line_1\\\":\\\"bill_to_street_line_1\\\",\\n\\\"bill_to_street_line_2\\\":\\\"bill_to_street_line_2\\\",\\n\\\"bill_to_city\\\":\\\"bill_to_city\\\",\\n\\\"bill_to_state\\\":\\\"bill_to_state\\\",\\n\\\"bill_to_postal_code\\\":\\\"bill_to_postal_code\\\",\\n\\\"bill_to_country\\\":\\\"bill_to_country\\\",\\n\\\"line_item_id\\\":\\\"line_item_id\\\",\\n\\\"product_external_id\\\":\\\"product_external_id\\\",\\n\\\"product_name\\\":\\\"product_name\\\",\\n\\\"product_description\\\":\\\"product_description\\\",\\n\\\"amount\\\":\\\"amount\\\",\\n\\\"tax_amount\\\":\\\"tax_amount\\\",\\n\\\"quantity\\\":\\\"quantity\\\", \\n\\\"exempt\\\":\\\"exempt\\\"\\n}\\n\\n\\n\\n\\n\""}]}
{"messages": [{"role": "system", "content": "As an expert data analyst, your task is to standardize the data from various CSV files, each with different schemas, into a unified standard schema.\n**Task Overview:**\nYou will receive CSV files with differing schemas and are required to convert them to a standard schema. The standard schema prioritizes specific columns crucial for data consistency and analysis. Here are the prioritized columns for the standard schema:\n- `transaction_external_id`: Any unique identifier for the transaction, invoice, or order.- `status`: Status of the transactions (COMMITTED, PENDING, FULLY_REFUNDED).- `transaction_source`: Source of the transactions (IMPORTED as default).- `date`: Date the transaction occurred.- `total_amount`: Total amount of the transaction.- `total_tax_amount`: Total tax amount of the transaction.- `currency`: ISO 3 digit currency code.- `description`: Description of the transaction.- `customer_id`: Any unique ID for a customer.- `customer_name`: Name of the customer.- `customer_email`: Email of the customer.- `marketplace`: If this transaction is from a marketplace facilitator.- `line_item_id`: Line item ID - Unique ID of the transaction item.- `product_external_id`: Unique ID of a product stored in your order management or billing system.- `product_name`: Name of the product.- `product_description`: Description of the product.- `amount`: Amount of the item.- `tax_amount`: Tax amount of the item.- `quantity`: Quantity of the item.- `exempt`: If the item is exempt from tax.\nYou will also encounter other columns in the raw CSV files. Here are the definitions for those additional columns:\n- `ship_to_phone`: Phone number for shipping address.- `ship_to_street_line_1`: Address line 1 for shipping.- `ship_to_street_line_2`: Address line 2 for shipping.- `ship_to_city`: City for shipping address.- `ship_to_state`: State for shipping address.- `ship_to_postal_code`: Postal code for shipping address.- `ship_to_country`: Country for shipping address.- `bill_to_phone`: Phone number for billing address.- `bill_to_street_line_1`: Address line 1 for billing.- `bill_to_street_line_2`: Address line 2 for billing.- `bill_to_city`: City for billing address.- `bill_to_state`: State for billing address.- `bill_to_postal_code`: Postal code for billing address.- `bill_to_country`: Country for billing address.\n\n           **Tasks:**\n1. Your primary objective is to map as many columns as possible to transfer data directly from the raw CSV files to the standard schema, even if columns match 10-20% map it to transfer.2. Additionally, map dependable columns of the standard schema that can be filled with data from the new CSV file.    for exmaple if there is colummn with the whole address in the new csv, we can fill it's data in chunks in the standard schema's columns3. Map any remaining columns with static values.    for example currency will be 'USD' mostly, there will be many columns like that4. Map columns with even tiny possibility of match \nNow you will be provided with a csv file, and your response will be a json object for column mapping"}, {"role": "user", "content": "  transaction_external_id     status transaction_source                 date  ...   amount  tax_amount quantity  exempt\n0                  id_302  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n1                  id_303  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n2                  id_304  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n3                  id_305  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n4                  id_306  COMMITTED          CHARGEBEE  2024-01-28T00:00:00  ...  40000.0         0.0        1   False\n\n[5 rows x 34 columns]"}, {"role": "assistant", "content": "\"\\t\\t\\n{\\\"transaction_external_id\\\":\\\"transaction_external_id\\\",\\n\\\"status\\\":\\\"status\\\"\\t,\\n\\\"transaction_source\\\":\\\"transaction_source\\\",    \\n\\\"date\\\":\\\"date\\\",\\n\\\"total_amount\\\":\\\"total_amount\\\" ,\\n\\\"total_tax_amount\\\":\\\"total_tax_amount\\\", \\n\\\"currency\\\":\\\"currency\\\",  \\n\\\"description\\\":\\\"description\\\",\\n\\\"customer_id\\\":\\\"customer_id\\\", \\n\\\"customer_name\\\":\\\"customer_name\\\", \\n\\\"customer_email\\\":\\\"customer_email\\\", \\n\\\"marketplace\\\":\\\"marketplace\\\", \\n\\\"ship_to_phone\\\":\\\"ship_to_phone\\\",\\n\\\"ship_to_street_line_1\\\":\\\"ship_to_street_line_1\\\", \\n\\\"ship_to_street_line_2\\\":\\\"ship_to_street_line_2\\\",\\n\\\"ship_to_city\\\":\\\"ship_to_city\\\", \\n\\\"ship_to_state\\\":\\\"ship_to_state\\\",\\n\\\"ship_to_postal_code\\\":\\\"ship_to_postal_code\\\",\\n\\\"ship_to_country\\\":\\\"ship_to_country\\\", \\n\\\"bill_to_phone\\\":\\\"bill_to_phone\\\",\\n\\\"bill_to_street_line_1\\\":\\\"bill_to_street_line_1\\\",\\n\\\"bill_to_street_line_2\\\":\\\"bill_to_street_line_2\\\",\\n\\\"bill_to_city\\\":\\\"bill_to_city\\\",\\n\\\"bill_to_state\\\":\\\"bill_to_state\\\",\\n\\\"bill_to_postal_code\\\":\\\"bill_to_postal_code\\\",\\n\\\"bill_to_country\\\":\\\"bill_to_country\\\",\\n\\\"line_item_id\\\":\\\"line_item_id\\\",\\n\\\"product_external_id\\\":\\\"product_external_id\\\",\\n\\\"product_name\\\":\\\"product_name\\\",\\n\\\"product_description\\\":\\\"product_description\\\",\\n\\\"amount\\\":\\\"amount\\\",\\n\\\"tax_amount\\\":\\\"tax_amount\\\",\\n\\\"quantity\\\":\\\"quantity\\\", \\n\\\"exempt\\\":\\\"exempt\\\"\\n}\\n\\n\\n\\n\\n\""}]}
